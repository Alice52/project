buildscript {
    repositories {
        maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
        maven { url 'https://maven.aliyun.com/repository/google' }
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        maven { url 'https://maven.aliyun.com/repository/jcenter' }
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${spring_boot_version}")
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '2.1.0.RELEASE' apply true
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
}

/**
 * 所有项目公共的配置
 */
allprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    group = 'cn.ntu.edu'
    version = '1.0-SNAPSHOT'
    sourceCompatibility = this.jdk_version
    targetCompatibility = this.jdk_version

    configurations {
        developmentOnly
        runtimeClasspath {
            extendsFrom developmentOnly
        }
        compileOnly {
            extendsFrom annotationProcessor
        }
    }
    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
        maven { url 'https://maven.aliyun.com/repository/google' }
        maven { url 'https://maven.aliyun.com/repository/jcenter' }
        mavenCentral()
        jcenter()
    }
}

subprojects {
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    [compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'
    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
        maven { url 'https://maven.aliyun.com/repository/google' }
        maven { url 'https://maven.aliyun.com/repository/jcenter' }
        mavenCentral()
        jcenter()
    }
    jar {
        enabled = true
    }

    bootJar {
        enabled = true
        excludeDevtools = true
    }

    test.enabled = false
    dependencies {
        compileOnly 'org.projectlombok:lombok'
        developmentOnly 'org.springframework.boot:spring-boot-devtools'
        annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
        annotationProcessor 'org.projectlombok:lombok'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-actuator'
        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }
        implementation 'cn.hutool:hutool-all'
    }
    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-dependencies:${spring_boot_version}"
            mavenBom "com.alibaba.cloud:spring-cloud-alibaba-dependencies:${ali_spring_cloud_version}"
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${spring_cloud_version}"

            mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
        }
        dependencies {
            dependencies {
                dependency group: 'javax.validation', name: 'validation-api', version: '2.0.1.Final'
                dependency "com.baomidou:mybatis-plus-boot-starter:${mybatisplus_version}"
                dependency "mysql:mysql-connector-java:${mysql_version}"
                dependency "com.alibaba:druid-spring-boot-starter:${druid_version}"
                dependency "org.quartz-scheduler:quartz:${quartz_version}"
                dependency "org.apache.shiro:shiro-core:${shiro_version}"
                dependency "org.apache.shiro:shiro-spring:${shiro_version}"
                dependency "io.jsonwebtoken:jjwt:${jwt_version}"
                dependency "com.github.axet:kaptcha:${kaptcha_version}"
                dependency "io.springfox:springfox-swagger2:${swagger_version}"
                dependency "io.springfox:springfox-swagger-ui:${swagger_version}"
                dependency "com.qiniu:qiniu-java-sdk:${qiniu_version}"
                dependency "com.aliyun.oss:aliyun-sdk-oss:${aliyun_oss_version}"
                dependency "com.qcloud:cos_api:${qcloud_cos_version}"
                dependency "joda-time:joda-time:${joda_time_version}"
                dependency "com.google.code.gson:gson:${gson_version}"
                dependency "com.alibaba:fastjson:${fastjson_version}"
                dependency "cn.hutool:hutool-all:${hutool_version}"
                dependency "commons-lang:commons-lang:${common_lang_version}"
                dependency "commons-fileupload:commons-fileupload:${commons_fileupload_version}"
                dependency "commons-io:commons-io:${commons_io_version}"
                dependency "commons-codec:commons-codec:${commons_codec_version}"
                dependency "commons-configuration:commons-configuration:${commons_configuration_version}"
                dependency "com.github.ulisesbocchio:jasypt-spring-boot-starter:${jasypt_encrtpy_version}"
                dependency "org.apache.velocity:velocity:${velocity_version}"
                dependency "com.github.pagehelper:pagehelper-spring-boot-starter:${pagehelper_version}"
                dependency "com.github.jsqlparser:jsqlparser:${jsqlparser_version}"
                dependency "com.microsoft.sqlserver:sqljdbc4:${sqlserver_version}"
                dependency "com.oracle:ojdbc6:${oracle_version}"
                dependency "org.apache.httpcomponents:httpcore:${httpcore_version}"
                dependency "javax.servlet:javax.servlet-api:${servlet_version}"

            }
        }
    }
}

wrapper {
    gradleVersion = '6.6.1' // version required
}

bootJar { enabled = false }
