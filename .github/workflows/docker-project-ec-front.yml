name: Build Docker Image Of EC Project Frontend

on:
  push:
    branches:
      - project-ec
    paths:
      - 'frontend/**'
      - '.github/**'

jobs:
  main:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    env: # define constant
      PROJECT_NAME: project-ec
      IMAGE_PREFIX: project-front
    strategy:
      matrix:
        node-version: [10.15.3]

    steps:
      - name: Export Global Var
        # define global var, then put to GITHUB_ENV
        run: |
          echo "ALI_DOCKER_REGISTRY=${{ secrets.ALI_DOCKER_HUB_REGISTRY }}" >> $GITHUB_ENV
          echo "ALI_DOCKER_USERNAME=${{ secrets.ALI_DOCKER_REGISTRY_USERNAME }}" >> $GITHUB_ENV
          echo "ALI_DOCKER_PASSWORD=${{ secrets.ALI_DOCKER_REGISTRY_PASSWORD }}" >> $GITHUB_ENV
          echo "JASYPT_ENCRYPTOR_PASSWORD=${{ secrets.JASYPT_ENCRYPTOR_PASSWORD }}" >> $GITHUB_ENV
          echo "MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}" >> $GITHUB_ENV
          echo "REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }}" >> $GITHUB_ENV
          echo "MONGO_PASSWORD=${{ secrets.MONGO_PASSWORD }}" >> $GITHUB_ENV
          echo "PROJECT_HOME=$PWD" >> $GITHUB_ENV
          echo "TAG=`echo \`date +%Y%m%d\`.${GITHUB_SHA} | cut -c1-16`" >> $GITHUB_ENV

      # build frontend project
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Build and Push Ec-Admin
        run: |
          MODULE_NAME=ec-admin
          cd frontend/$MODULE_NAME
          npm install
          npm run build
          cd $PROJECT_HOME/frontend/$MODULE_NAME
          image=$IMAGE_PREFIX-$MODULE_NAME:${TAG}
          docker build -f Dockerfile --build-arg REDIS_PASSWORD=$REDIS_PASSWORD --build-arg MONGO_PASSWORD=$MONGO_PASSWORD -t ${image} .
          docker login --username=$ALI_DOCKER_USERNAME --password=$ALI_DOCKER_PASSWORD $ALI_DOCKER_REGISTRY
          docker tag $image $ALI_DOCKER_REGISTRY/alice52/$image
          docker push $ALI_DOCKER_REGISTRY/alice52/$image
          echo "image:" ${image}

